From 81564fcefcf1554fa3a0f2145b9e18d149228344 Mon Sep 17 00:00:00 2001
From: Harald Hoyer <harald@redhat.com>
Date: Thu, 9 Jan 2014 12:17:01 +0100
Subject: [PATCH] documentation: line wrap

---
 dracut.8.asc         |  16 ++++---
 dracut.asc           |  12 +++--
 dracut.bootup.7.asc  |   3 +-
 dracut.cmdline.7.asc | 125 ++++++++++++++++++++++++++++++++-------------------
 dracut.conf.5.asc    |  18 +++++---
 dracut.modules.7.asc |  45 +++++++++++--------
 dracut.usage.asc     |  45 ++++++++++++-------
 mkinitrd.8.asc       |   4 +-
 8 files changed, 165 insertions(+), 103 deletions(-)

diff --git a/dracut.8.asc b/dracut.8.asc
index 2ea6744..b294675 100644
--- a/dracut.8.asc
+++ b/dracut.8.asc
@@ -33,9 +33,9 @@ For a complete list of kernel command line options see *dracut.cmdline*(7).
 If you are dropped to an emergency shell, while booting your initramfs,
 the file _/run/initramfs/rdsosreport.txt_ is created, which can be safed to a
 (to be mounted by hand) partition (usually /boot) or a USB stick.
-Additional debugging info can be produced by adding **rd.debug** to the kernel command line.
-_/run/initramfs/rdsosreport.txt_ contains all logs and the output of some tools.
-It should be attached to any report about dracut problems.
+Additional debugging info can be produced by adding **rd.debug** to the kernel
+command line. _/run/initramfs/rdsosreport.txt_ contains all logs and the output
+of some tools. It should be attached to any report about dracut problems.
 
 USAGE
 -----
@@ -362,7 +362,8 @@ will not be able to boot. Equivalent to "lzma --compress=lzma -9"
 [WARNING]
 ====
 Make sure your kernel has xz decompression support compiled in, otherwise you
-will not be able to boot. Equivalent to "lzma --compress=xz --check=crc32 --lzma2=dict=1MiB"
+will not be able to boot. Equivalent to
+"lzma --compress=xz --check=crc32 --lzma2=dict=1MiB"
 ====
 
 **--lzo**::
@@ -423,8 +424,8 @@ will not be able to boot.
 ----
 
 **--regenerate-all**::
-    Regenerate all initramfs images at the default location with the kernel versions found on the system.
-    Additional parameters are passed through.
+    Regenerate all initramfs images at the default location with the kernel
+    versions found on the system. Additional parameters are passed through.
 
 FILES
 -----
@@ -452,7 +453,8 @@ _/etc/conf.d/_::
     set in the configuration files.
 
 _/etc/cmdline_::
-    Can contain additional command line options. Deprecated, better use /etc/cmdline.d/*.conf.
+    Can contain additional command line options. Deprecated, better use
+    /etc/cmdline.d/*.conf.
 
 _/etc/cmdline.d/*.conf_::
     Can contain additional command line options.
diff --git a/dracut.asc b/dracut.asc
index 031b201..b047a33 100644
--- a/dracut.asc
+++ b/dracut.asc
@@ -125,12 +125,14 @@ started looks like <<dracutbootup7>>.
 
 == Dracut on shutdown
 
-On a systemd driven system, the dracut initramfs is also used for the shutdown procedure.
+On a systemd driven system, the dracut initramfs is also used for the shutdown
+procedure.
 
 The following steps are executed during a shutdown:
 
 * systemd switches to the shutdown.target
-* systemd starts /lib/systemd/system/shutdown.target.wants/dracut-shutdown.service
+* systemd starts
+  /lib/systemd/system/shutdown.target.wants/dracut-shutdown.service
 * dracut-shutdown.service executes /usr/lib/dracut/dracut-initramfs-restore
   which unpacks the initramfs to /run/initramfs
 * systemd finishes shutdown.target
@@ -138,8 +140,10 @@ The following steps are executed during a shutdown:
 * systemd tries to unmount everything and mounts the remaining read-only
 * systemd checks, if there is a /run/initramfs/shutdown executable
 * if yes, it does a pivot_root to /run/initramfs and executes ./shutdown.
-  The old root is then mounted on /oldroot. /usr/lib/dracut/modules.d/99shutdown/shutdown.sh is the shutdown executable.
-* shutdown will try to umount every /oldroot mount and calls the various shutdown hooks from the dracut modules
+  The old root is then mounted on /oldroot.
+  /usr/lib/dracut/modules.d/99shutdown/shutdown.sh is the shutdown executable.
+* shutdown will try to umount every /oldroot mount and calls the various
+  shutdown hooks from the dracut modules
 
 This ensures, that all devices are disassembled and unmounted cleanly.
 
diff --git a/dracut.bootup.7.asc b/dracut.bootup.7.asc
index c35af19..d7edc1e 100644
--- a/dracut.bootup.7.asc
+++ b/dracut.bootup.7.asc
@@ -11,7 +11,8 @@ dracut.bootup - boot ordering in the initramfs
 DESCRIPTION
 -----------
 
-This flow chart illustrates the ordering of the services, if systemd is used in the dracut initramfs.
+This flow chart illustrates the ordering of the services, if systemd is used in
+the dracut initramfs.
 ----
 
                                     systemd-journal.socket
diff --git a/dracut.cmdline.7.asc b/dracut.cmdline.7.asc
index 6a5fc8f..8ac5341 100644
--- a/dracut.cmdline.7.asc
+++ b/dracut.cmdline.7.asc
@@ -72,14 +72,14 @@ rootfstype=ext3
     See also ro option.
 
 **rootfallback=**__<path to blockdevice>__::
-    specify the block device to use as the root filesystem, if the normal root cannot be found.
-    This can only be a simple block device with a simple file system, for which the filesystem
-    driver is either compiled in, or added manually to the initramfs.
-    This parameter can be specified multiple times.
+    specify the block device to use as the root filesystem, if the normal root
+    cannot be found. This can only be a simple block device with a simple file
+    system, for which the filesystem driver is either compiled in, or added
+    manually to the initramfs. This parameter can be specified multiple times.
 
 **rd.auto** **rd.auto=1**::
-    enable autoassembly of special devices like cryptoLUKS, dmraid, mdraid or lvm.
-    Default is off as of dracut version >= 024.
+    enable autoassembly of special devices like cryptoLUKS, dmraid, mdraid or
+    lvm. Default is off as of dracut version >= 024.
 
 **rd.fstab=0**::
     do not honor special mount options for the root filesystem found in
@@ -132,9 +132,10 @@ Misc
 [[dracutkerneldebug]]
 Debug
 ~~~~~
-If you are dropped to an emergency shell, the file _/run/initramfs/rdsosreport.txt_ is created,
-which can be safed to a (to be mounted by hand) partition (usually /boot) or a USB stick.
-Additional debugging info can be produced by adding **rd.debug** to the kernel command line.
+If you are dropped to an emergency shell, the file 
+_/run/initramfs/rdsosreport.txt_ is created, which can be safed to a (to be
+mounted by hand) partition (usually /boot) or a USB stick. Additional debugging
+info can be produced by adding **rd.debug** to the kernel command line.
 _/run/initramfs/rdsosreport.txt_ contains all logs and the output of some tools.
 It should be attached to any report about dracut problems.
 
@@ -146,13 +147,15 @@ It should be attached to any report about dracut problems.
 
 **rd.debug**::
     set -x for the dracut shell.
-    If systemd is active in the initramfs, all output is logged to the systemd journal,
-    which you can inspect with "journalctl -ab".
-    If systemd is not active, the logs are written to dmesg and _/run/initramfs/init.log_.
+    If systemd is active in the initramfs, all output is logged to the systemd
+    journal, which you can inspect with "journalctl -ab".
+    If systemd is not active, the logs are written to dmesg and
+    _/run/initramfs/init.log_.
     If "quiet" is set, it also logs to the console.
 
 **rd.memdebug=[0-3]**::
-    Print memory usage info at various points, set the verbose level from 0 to 3. +
+    Print memory usage info at various points, set the verbose level from 0 to 3.
++    
     Higher level means more debugging output:
 +
 ----
@@ -258,10 +261,10 @@ crypto LUKS
     This parameter can be specified multiple times.
 
 **rd.luks.allow-discards=**__<luks uuid>__::
-    Allow  using  of discards (TRIM) requests for LUKS partitions with the given UUID.
-    Any "luks-" of the LUKS UUID is removed before comparing to _<luks uuid>_.
-    The comparisons also matches, if _<luks uuid>_ is only the beginning of the
-    LUKS UUID, so you don't have to specify the full UUID.
+    Allow  using  of discards (TRIM) requests for LUKS partitions with the given
+    UUID. Any "luks-" of the LUKS UUID is removed before comparing to
+    _<luks uuid>_. The comparisons also matches, if _<luks uuid>_ is only the
+    beginning of the LUKS UUID, so you don't have to specify the full UUID.
     This parameter can be specified multiple times.
 
 **rd.luks.allow-discards**::
@@ -273,11 +276,21 @@ crypto LUKS
 crypto LUKS - key on removable device support
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 **rd.luks.key=**__<keypath>__:__<keydev>__:__<luksdev>__::
-    _keypath_ is a path to key file to look for. It's REQUIRED. When _keypath_ ends with '.gpg' it's considered to be key encrypted symmetrically with GPG. You will be prompted for password on boot. GPG support comes with 'crypt-gpg' module which needs to be added explicitly.
-+
-_keydev_ is a device on which key file resides. It might be kernel name of devices (should start with "/dev/"), UUID (prefixed with "UUID=") or label (prefix with "LABEL="). You don't have to specify full UUID. Just its beginning will suffice, even if its ambiguous. All matching devices will be probed. This parameter is recommended, but not required. If not present, all block devices will be probed, which may significantly increase boot time.
-+
-If _luksdev_ is given, the specified key will only be applied for that LUKS device. Possible values are the same as for _keydev_. Unless you have several LUKS devices, you don't have to specify this parameter. The simplest usage is:
+    _keypath_ is a path to key file to look for. It's REQUIRED. When _keypath_
+    ends with '.gpg' it's considered to be key encrypted symmetrically with GPG.
+    You will be prompted for password on boot. GPG support comes with
+    'crypt-gpg' module which needs to be added explicitly.
++
+_keydev_ is a device on which key file resides. It might be kernel name of
+devices (should start with "/dev/"), UUID (prefixed with "UUID=") or label
+(prefix with "LABEL="). You don't have to specify full UUID. Just its beginning
+will suffice, even if its ambiguous. All matching devices will be probed.
+This parameter is recommended, but not required. If not present, all block
+devices will be probed, which may significantly increase boot time.
++
+If _luksdev_ is given, the specified key will only be applied for that LUKS
+device. Possible values are the same as for _keydev_. Unless you have several
+LUKS devices, you don't have to specify this parameter. The simplest usage is:
 +
 [listing]
 .Example
@@ -325,7 +338,8 @@ MD RAID
     ignore mdadm.conf included in initramfs
 
 **rd.md.waitclean=1**::
-    wait for any resync, recovery, or reshape activity to finish before continuing
+    wait for any resync, recovery, or reshape activity to finish before
+    continuing
 
 **rd.md.uuid=**__<md raid uuid>__::
     only activate the raid sets with the given UUID. This parameter can be
@@ -366,8 +380,8 @@ Network
 
 [IMPORTANT]
 =====================
-It is recommended to either bind an interface to a MAC with the **ifname** argument,
-or to use the systemd-udevd predictable network interface names.
+It is recommended to either bind an interface to a MAC with the **ifname**
+argument, or to use the systemd-udevd predictable network interface names.
 
 Predictable network interface device names based on:
 
@@ -376,7 +390,8 @@ Predictable network interface device names based on:
 - physical/geographical location of the hardware
 - the interface's MAC address
 
-See: http://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames
+See:
+http://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames
 
 Two character prefixes based on the type of interface:
 
@@ -423,9 +438,9 @@ USB Android phone::
 =====================
 
 **ip=**__{dhcp|on|any|dhcp6|auto6|ibft}__::
-    dhcp|on|any::: get ip from dhcp server from all interfaces. If root=dhcp, loop
-    sequentially through all interfaces (eth0, eth1, ...) and use the first with
-    a valid DHCP root-path.
+    dhcp|on|any::: get ip from dhcp server from all interfaces. If root=dhcp,
+    loop sequentially through all interfaces (eth0, eth1, ...) and use the first
+    with a valid DHCP root-path.
 
     auto6::: IPv6 autoconfiguration
 
@@ -448,8 +463,8 @@ same <interface>.
     explicit network configuration. If you want do define a IPv6 address, put it
     in brackets (e.g. [2001:DB8::1]). This parameter can be specified multiple
     times. __<peer>__ is optional and is the address of the remote endpoint
-    for pointopoint interfaces and it may be followed by a slash and a decimal number,
-    encoding the network prefix length.
+    for pointopoint interfaces and it may be followed by a slash and a decimal
+    number, encoding the network prefix length.
 +
 =====================
 <macaddr>::: optionally **set** <macaddr> on the <interface>. This
@@ -458,7 +473,8 @@ same <interface>.
 =====================
 
 **ifname=**__<interface>__:__<MAC>__::
-    Assign network device name <interface> (ie "bootnet") to the NIC with MAC <MAC>.
+    Assign network device name <interface> (ie "bootnet") to the NIC with
+    MAC <MAC>.
 +
 WARNING: Do **not** use the default kernel naming scheme for the interface name,
 as it can conflict with the kernel names. So, don't use "eth[0-9]+" for the
@@ -479,16 +495,18 @@ interface name. Better name it "bootnet" or "bluesocket".
 
 **vlan=**__<vlanname>__:__<phydevice>__::
     Setup vlan device named <vlanname> on <phydeivce>.
-    We support the four styles of vlan names: VLAN_PLUS_VID (vlan0005), VLAN_PLUS_VID_NO_PAD (vlan5),
-    DEV_PLUS_VID (eth0.0005), DEV_PLUS_VID_NO_PAD (eth0.5)
+    We support the four styles of vlan names: VLAN_PLUS_VID (vlan0005),
+    VLAN_PLUS_VID_NO_PAD (vlan5), DEV_PLUS_VID (eth0.0005),
+    DEV_PLUS_VID_NO_PAD (eth0.5)
 
 **bond=**__<bondname>__[:__<bondslaves>__:[:__<options>__]]::
     Setup bonding device <bondname> on top of <bondslaves>.
     <bondslaves> is a comma-separated list of physical (ethernet) interfaces.
-    <options> is a comma-separated list on bonding options (modinfo bonding for details)
-    in format compatible with initscripts. If <options> includes multi-valued arp_ip_target option,
-    then its values should be separated by semicolon.
-    Bond without parameters assumes bond=bond0:eth0,eth1:mode=balance-rr
+    <options> is a comma-separated list on bonding options (modinfo bonding for
+    details) in format compatible with initscripts. If <options> includes
+    multi-valued arp_ip_target option, then its values should be separated by
+    semicolon. Bond without parameters assumes
+    bond=bond0:eth0,eth1:mode=balance-rr
 
 **team=**__<teammaster>__:__<teamslaves>__::
     Setup team device <teammaster> on top of <teamslaves>.
@@ -496,7 +514,8 @@ interface name. Better name it "bootnet" or "bluesocket".
 
 **bridge=**__<bridgename>__:__<ethnames>__::
     Setup bridge <bridgename> with <ethnames>. <ethnames> is a comma-separated
-    list of physical (ethernet) interfaces. Bridge without parameters assumes bridge=br0:eth0
+    list of physical (ethernet) interfaces. Bridge without parameters assumes
+    bridge=br0:eth0
 
 NFS
 ~~~
@@ -534,7 +553,9 @@ CIFS
 as part of the root, then they must be passed on the command line through
 cifsuser/cifspass.
 +
-WARNING: Passwords specified on the kernel command line are visible for all users via the file _/proc/cmdline_ and via dmesg or can be sniffed on the network, when using DHCP with DHCP root-path.
+WARNING: Passwords specified on the kernel command line are visible for all
+users via the file _/proc/cmdline_ and via dmesg or can be sniffed on the
+network, when using DHCP with DHCP root-path.
 
 **cifsuser**=__<username>__::
     Set the cifs username, if not specified as part of the root.
@@ -542,7 +563,9 @@ WARNING: Passwords specified on the kernel command line are visible for all user
 **cifspass**=__<password>__::
     Set the cifs password, if not specified as part of the root.
 +
-WARNING: Passwords specified on the kernel command line are visible for all users via the file _/proc/cmdline_ and via dmesg or can be sniffed on the network, when using DHCP with DHCP root-path.
+WARNING: Passwords specified on the kernel command line are visible for all
+users via the file _/proc/cmdline_ and via dmesg or can be sniffed on the
+network, when using DHCP with DHCP root-path.
 
 iSCSI
 ~~~~~
@@ -555,7 +578,9 @@ iSCSI
     fields. See
     link:$$http://tools.ietf.org/html/rfc4173#section-5$$[rfc4173].
 +
-WARNING: Passwords specified on the kernel command line are visible for all users via the file _/proc/cmdline_ and via dmesg or can be sniffed on the network, when using DHCP with DHCP root-path.
+WARNING: Passwords specified on the kernel command line are visible for all
+users via the file _/proc/cmdline_ and via dmesg or can be sniffed on the
+network, when using DHCP with DHCP root-path.
 +
 [listing]
 .Example
@@ -590,12 +615,18 @@ If servername is an IPv6 address, it has to be put in brackets:
 netroot=iscsi:[2001:DB8::1]::::iqn.2009-06.dracut:target0
 --
 +
-WARNING: Passwords specified on the kernel command line are visible for all users via the file _/proc/cmdline_ and via dmesg or can be sniffed on the network, when using DHCP with DHCP root-path. You may want to use rd.iscsi.firmware.
+WARNING: Passwords specified on the kernel command line are visible for all
+users via the file _/proc/cmdline_ and via dmesg or can be sniffed on the
+network, when using DHCP with DHCP root-path.
+You may want to use rd.iscsi.firmware.
 
 **root=**__???__ **rd.iscsi.initiator=**__<initiator>__ **rd.iscsi.target.name=**__<target name>__  **rd.iscsi.target.ip=**__<target ip>__ **rd.iscsi.target.port=**__<target port>__ **rd.iscsi.target.group=**__<target group>__ **rd.iscsi.username=**__<username>__ **rd.iscsi.password=**__<password>__ **rd.iscsi.in.username=**__<in username>__ **rd.iscsi.in.password=**__<in password>__::
     manually specify all iscsistart parameter (see **+iscsistart --help+**)
 +
-WARNING: Passwords specified on the kernel command line are visible for all users via the file _/proc/cmdline_ and via dmesg or can be sniffed on the network, when using DHCP with DHCP root-path. You may want to use rd.iscsi.firmware.
+WARNING: Passwords specified on the kernel command line are visible for all
+users via the file _/proc/cmdline_ and via dmesg or can be sniffed on the
+network, when using DHCP with DHCP root-path.
+You may want to use rd.iscsi.firmware.
 
 **root=**_???_ **netroot=**iscsi **rd.iscsi.firmware=1**::
  will read the iscsi parameter from the BIOS firmware
@@ -715,7 +746,8 @@ ecryptfskey=/etc/keys/ecryptfs-trusted.blob
 
 Deprecated, renamed Options
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~
-Here is a list of options, which were used in dracut prior to version 008, and their new replacement.
+Here is a list of options, which were used in dracut prior to version 008, and
+their new replacement.
 
 rdbreak:: rd.break
 
@@ -849,7 +881,8 @@ _/etc/conf.d/_::
     set in the configuration files.
 
 _/etc/cmdline_::
-    Can contain additional command line options. Deprecated, better use /etc/cmdline.d/*.conf.
+    Can contain additional command line options. Deprecated, better use
+    /etc/cmdline.d/*.conf.
 
 _/etc/cmdline.d/*.conf_::
     Can contain additional command line options.
diff --git a/dracut.conf.5.asc b/dracut.conf.5.asc
index 30b7e03..5c94118 100644
--- a/dracut.conf.5.asc
+++ b/dracut.conf.5.asc
@@ -10,17 +10,19 @@ dracut.conf - configuration file(s) for dracut
 
 SYNOPSIS
 --------
-_/etc/dracut.conf_ _/etc/dracut.conf.d/*.conf_  _/usr/lib/dracut/dracut.conf.d/*.conf_
+_/etc/dracut.conf_ _/etc/dracut.conf.d/*.conf_
+_/usr/lib/dracut/dracut.conf.d/*.conf_
 
 Description
 -----------
 _dracut.conf_ is loaded during the initialisation phase of dracut. Command line
 parameter will overwrite any values set here.
 
-_*.conf_ files are read from /usr/lib/dracut/dracut.conf.d and /etc/dracut.conf.d.
-Files with the same name in /etc/dracut.conf.d will replace files in /usr/lib/dracut/dracut.conf.d.
-The files are then read in alphanumerical order and will overwrite parameters set in
-_/etc/dracut.conf_. Each line specifies an attribute and a value. A '#'
+_*.conf_ files are read from /usr/lib/dracut/dracut.conf.d and
+/etc/dracut.conf.d. Files with the same name in /etc/dracut.conf.d will replace
+files in /usr/lib/dracut/dracut.conf.d.
+The files are then read in alphanumerical order and will overwrite parameters
+set in _/etc/dracut.conf_. Each line specifies an attribute and a value. A '#'
 indicates the beginning of a comment; following characters, up to the end of the
 line are not interpreted.
 
@@ -84,7 +86,8 @@ Configuration files must have the extension .conf; other extensions are ignored.
 
 [WARNING]
 ====
-If chrooted to another root other than the real root device, use --fstab and provide a valid _/etc/fstab_.
+If chrooted to another root other than the real root device, use --fstab and
+provide a valid _/etc/fstab_.
 ====
 
 *use_fstab=*"__{yes|no}__"::
@@ -163,7 +166,8 @@ If chrooted to another root other than the real root device, use --fstab and pro
     See dracut/modules.d/10i18n/README for a detailed description.
 
 *i18n_default_font=*"__<fontname>__"::
-    The font <fontname> to install, if not specified otherwise. Default is "LatArCyrHeb-16".
+    The font <fontname> to install, if not specified otherwise.
+    Default is "LatArCyrHeb-16".
 
 *i18n_install_all=*"__{yes|no}__"::
     Install everything regardless of generic or hostonly mode.
diff --git a/dracut.modules.7.asc b/dracut.modules.7.asc
index 17acdb4..e94670f 100644
--- a/dracut.modules.7.asc
+++ b/dracut.modules.7.asc
@@ -96,8 +96,8 @@ This hooks (initqueue/settled) gets executed every time udev has settled.
 
 ==== Initqueue timeout
 
-This hooks (initqueue/timeout) gets executed, when the main loop counter becomes half of the
-rd.retry counter.
+This hooks (initqueue/timeout) gets executed, when the main loop counter becomes
+half of the rd.retry counter.
 
 ==== Initqueue finished
 
@@ -133,7 +133,8 @@ needed anymore.
 Init (or systemd) kills all udev processes, cleans up the environment,
 sets up the arguments for the real init process and finally calls switch_root.
 switch_root removes the whole filesystem hierarchy of the initramfs,
-chroot()s to the real root device and calls /sbin/init with the specified arguments.
+chroot()s to the real root device and calls /sbin/init with the specified
+arguments.
 
 To ensure all files in the initramfs hierarchy can be removed, all processes
 still running from the initramfs should not have any open file descriptors left.
@@ -225,50 +226,56 @@ depends on.
 
 === module-setup.sh: cmdline()
 
-This function should print the kernel command line options needed to boot the current
-machine setup. It should start with a space and should not print a newline.
+This function should print the kernel command line options needed to boot the
+current machine setup. It should start with a space and should not print a
+newline.
 
 === module-setup.sh: install()
 
-The install() function is called to install everything non-kernel related. To install
-binaries, scripts, and other files, you can use the functions mentioned in <<creation>>.
+The install() function is called to install everything non-kernel related.
+To install binaries, scripts, and other files, you can use the functions
+mentioned in <<creation>>.
 
 To address a file in the current module directory, use the variable "$moddir".
 
 === module-setup.sh: installkernel()
 
-In installkernel() all kernel related files should be installed. You can use all of the functions
-mentioned in <<creation>> to install files.
+In installkernel() all kernel related files should be installed. You can use all
+of the functions mentioned in <<creation>> to install files.
 
 === [[creation]]Creation Functions
 
 ==== inst_multiple [-o] <file> [ <file> ...]
 
-installs multiple binaries and files. If executables are specified without a path, dracut
-will search the path PATH=/usr/sbin:/sbin:/usr/bin:/bin for the binary. If the option "-o"
-is given as the first parameter, a missing file does not lead to an error.
+installs multiple binaries and files. If executables are specified without a
+path, dracut will search the path PATH=/usr/sbin:/sbin:/usr/bin:/bin for the
+binary. If the option "-o" is given as the first parameter, a missing file does
+not lead to an error.
 
 ==== inst <src> [<dst>]
 
-installs _one_ file <src> either to the same place in the initramfs or to an optional <dst>.
+installs _one_ file <src> either to the same place in the initramfs or to an
+optional <dst>.
 
 ==== inst_hook <hookdir> <prio> <src>
 
-installs an executable/script <src> in the dracut hook <hookdir> with priority <prio>.
+installs an executable/script <src> in the dracut hook <hookdir> with priority
+<prio>.
 
 ==== inst_rules <udevrule> [ <udevrule> ...]
 
-installs one ore more udev rules. Non-existant udev rules are reported, but do not let dracut fail.
+installs one ore more udev rules. Non-existant udev rules are reported, but do
+not let dracut fail.
 
 ==== instmods <kernelmodule> [ <kernelmodule> ... ]
 
 instmods should be used only in the installkernel() function.
 
-instmods installs one or more kernel modules in the initramfs. <kernelmodule> can also be a whole
-subsystem, if prefixed with a "=", like "=drivers/net/team".
+instmods installs one or more kernel modules in the initramfs. <kernelmodule>
+can also be a whole subsystem, if prefixed with a "=", like "=drivers/net/team".
 
-instmods will not install the kernel module, if $hostonly is set and the kernel module is not currently
-needed by any /sys/*...*/uevent MODALIAS.
+instmods will not install the kernel module, if $hostonly is set and the kernel
+module is not currently needed by any /sys/*...*/uevent MODALIAS.
 To install a kernel module regardless of the hostonly mode use the form:
 ----
 hostonly='' instmods <kernelmodule>
diff --git a/dracut.usage.asc b/dracut.usage.asc
index 6d37920..0b874e6 100644
--- a/dracut.usage.asc
+++ b/dracut.usage.asc
@@ -43,7 +43,8 @@ pieces. At least keep a copy of a general purpose image (and corresponding
 kernel) as a fallback to rescue your system.
 
 === Inspecting the Contents
-To see the contents of the image created by dracut, you can use the lsinitrd tool.
+To see the contents of the image created by dracut, you can use the lsinitrd
+tool.
 ----
 # lsinitrd | less
 ----
@@ -105,10 +106,11 @@ the grub menu.
 The kernel command line can also be provided by the dhcp server with the
 root-path option. See <<NetworkBoot>>.
 
-For a full reference of all kernel command line parameters, see *dracut.cmdline*(5).
+For a full reference of all kernel command line parameters,
+see *dracut.cmdline*(5).
 
-To get a quick start for the suitable kernel command line on your system, use the
-__--print-cmdline__ option:
+To get a quick start for the suitable kernel command line on your system,
+use the __--print-cmdline__ option:
 ----
 # dracut --print-cmdline
  root=UUID=8b8b6f91-95c7-4da2-831b-171e12179081 rootflags=rw,relatime,discard,data=ordered rootfstype=ext4
@@ -183,7 +185,8 @@ logical partition would contain:
 rd.luks=0 rd.lvm=0 rd.md=0 rd.dm=0
 ----
 
-This turns off every automatic assembly of LVM, MD raids, DM raids and crypto LUKS.
+This turns off every automatic assembly of LVM, MD raids, DM raids and
+crypto LUKS.
 
 Of course, you could also omit the dracut modules in the initramfs creation
 process, but then you would lose the posibility to turn it on on demand.
@@ -193,12 +196,14 @@ process, but then you would lose the posibility to turn it on on demand.
 === Injecting custom Files
 To add your own files to the initramfs image, you have several possibilities.
 
-The --include option let you specify a source path and a target path. For example
+The --include option let you specify a source path and a target path.
+For example
 ----
 # dracut --include cmdline-preset /etc/cmdline.d/mycmdline.conf initramfs-cmdline-pre.img
 ----
 will create an initramfs image, where the file cmdline-preset will be copied
-inside the initramfs to _/etc/cmdline.d/mycmdline.conf_. --include can only be specified once.
+inside the initramfs to _/etc/cmdline.d/mycmdline.conf_. --include can only
+be specified once.
 
 
 ----
@@ -261,8 +266,8 @@ server about the ip adress for the machine. The dhcp server can also serve an
 additional root-path, which will set the root device for dracut. With this
 mechanism, you have static configuration on your client machine and a
 centralized boot configuration on your TFTP/DHCP server. If you can't pass a
-kernel command line, then you can inject _/etc/cmdline.d/mycmdline.conf_, with a method described
-in <<Injecting>>.
+kernel command line, then you can inject _/etc/cmdline.d/mycmdline.conf_, with a
+method described in <<Injecting>>.
 
 ==== Reducing the Image Size
 
@@ -306,10 +311,11 @@ dracut be unable to locate your root device
 . Add ''rd.shell rd.debug log_buf_len=1M'' to the kernel command line so that
 dracut shell commands are printed as they are executed
 . The file /run/initramfs/rdsosreport.txt is generated,
-which contains all the logs and the output of all significant tools, which are mentioned later.
+which contains all the logs and the output of all significant tools, which are
+mentioned later.
 
-If you want to save that output, simply mount /boot by hand or insert an USB stick and mount that.
-Then you can store the output for later inspection.
+If you want to save that output, simply mount /boot by hand or insert an USB
+stick and mount that. Then you can store the output for later inspection.
 
 [[information-to-include-in-your-report]]
 === Information to include in your report
@@ -420,7 +426,8 @@ title Fedora (2.6.29.5-191.fc11.x86_64)
   initrd /dracut-2.6.29.5-191.fc11.x86_64.img
 ----
 +
-. If system boot fails, you will be dropped into a shell as seen in the example below.
+. If system boot fails, you will be dropped into a shell as seen in the example
+below.
 +
 ----
 No root device found
@@ -429,7 +436,8 @@ Dropping to debug shell.
 #
 ----
 +
-. Use this shell prompt to gather the information requested above (see <<all-bug-reports>>).
+. Use this shell prompt to gather the information requested above
+(see <<all-bug-reports>>).
 
 [[accessing-the-root-volume-from-the-dracut-shell]]
 ==== Accessing the root volume from the dracut shell
@@ -439,8 +447,10 @@ root volume is configured. Common scenarios include:
 
 * A block device (e.g. _/dev/sda7_)
 * A LVM logical volume (e.g. _/dev/VolGroup00/LogVol00_)
-* An encrypted device (e.g. _/dev/mapper/luks-4d5972ea-901c-4584-bd75-1da802417d83_)
-* A network attached device (e.g. netroot=iscsi:@192.168.0.4::3260::iqn.2009-02.org.fedoraproject:for.all)
+* An encrypted device
+  (e.g. _/dev/mapper/luks-4d5972ea-901c-4584-bd75-1da802417d83_)
+* A network attached device
+  (e.g. _netroot=iscsi:@192.168.0.4::3260::iqn.2009-02.org.example:for.all_)
 
 The exact method for locating and preparing will vary. However, to continue with
 a successful boot, the objective is to locate your root volume and create a
@@ -522,5 +532,6 @@ To do this from an already booted system:
 # touch /run/initramfs/.need_shutdown
 ----
 
-This will give you a dracut shell after the system pivot'ed back in the initramfs.
+This will give you a dracut shell after the system pivot'ed back in the
+initramfs.
 
diff --git a/mkinitrd.8.asc b/mkinitrd.8.asc
index 25661c8..146a6d0 100644
--- a/mkinitrd.8.asc
+++ b/mkinitrd.8.asc
@@ -41,8 +41,8 @@ OPTIONS
 
 **--preload=<module>**::
      preload the kernel module <module> in the initramfs before any other kernel
-     modules are loaded. This can be used to ensure a certain device naming, which
-     should in theory be avoided and the use of symbolic links in /dev is
+     modules are loaded. This can be used to ensure a certain device naming,
+     which should in theory be avoided and the use of symbolic links in /dev is
      encouraged.
 
 **--nocompress**::
